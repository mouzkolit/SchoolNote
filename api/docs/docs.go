// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Maximilian Zeidler PhD",
            "email": "maximilian.zeidler@outlook.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/pupil": {
            "post": {
                "description": "Creates A Pupil in a Class",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pupil"
                ],
                "summary": "Creates A Pupil in a Class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Pupil",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LastName of the Pupil",
                        "name": "lastName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PupilResponse"
                        }
                    }
                }
            }
        },
        "/pupil/{id}": {
            "get": {
                "description": "Gets a Pupil from a Class",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pupil"
                ],
                "summary": "Retrieves a pupil from the path",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the Pupil",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PupilResponse"
                        }
                    }
                }
            }
        },
        "/pupils": {
            "get": {
                "description": "Retrieves all Pupils from the school",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pupils"
                ],
                "summary": "Retrieves all Pupils",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PupilResponse"
                            }
                        }
                    }
                }
            }
        },
        "/school": {
            "post": {
                "description": "Creates a new school in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "School"
                ],
                "summary": "Create School",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the School",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Place of the School",
                        "name": "place",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website of the School",
                        "name": "web",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolResponse"
                        }
                    }
                }
            }
        },
        "/school/:id": {
            "get": {
                "description": "Gets a school by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "School"
                ],
                "summary": "Get School",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the School",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolResponse"
                        }
                    }
                }
            }
        },
        "/school/login": {
            "post": {
                "description": "Logs in a school",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "School"
                ],
                "summary": "School Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the School",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password of the School",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolResponse"
                        }
                    }
                }
            }
        },
        "/schools": {
            "get": {
                "description": "Creates a new school class in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "School"
                ],
                "summary": "Create School Class",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SchoolResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.PupilResponse": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.SchoolResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "schoolWeb": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "School Notebook API",
	Description:      "A School Notes service API Backend in GOlang",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
